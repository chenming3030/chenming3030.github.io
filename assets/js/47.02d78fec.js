(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{979:function(_,v,e){"use strict";e.r(v);var t=e(65),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"设计模式概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计模式概述"}},[_._v("#")]),_._v(" 设计模式概述")]),_._v(" "),e("h2",{attrs:{id:"_1-产生背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-产生背景"}},[_._v("#")]),_._v(" 1. 产生背景")]),_._v(" "),e("p",[_._v("”设计模式“ 最初并不是出现在软件设计中，而是被用于建筑领域的设计中。")]),_._v(" "),e("p",[_._v("1977年美国著名建筑大师、加利福尼亚大学伯克利分校环境结构中心主任 "),e("code",[_._v("克里斯托夫·亚历山大（Christopher Alexander）")]),_._v(" 在他的著作《建筑模式语言：城镇、建筑、构造》中描述了一些常见的建筑设计问题，并提出了 253 种关于对城镇、邻里、住宅、花园和房间等进行设计的基本模式。")]),_._v(" "),e("p",[_._v("1990年软件工程界开始研讨设计模式的话题，后来召开了多次关于设计模式的研讨会。直到1995 年，艾瑞克·伽马（ErichGamma）、理査德·海尔姆（Richard Helm）、拉尔夫·约翰森（Ralph Johnson）、约翰·威利斯迪斯（John Vlissides）等 4 位作者合作出版了《设计模式：可复用面向对象软件的基础》一书，在此书中收录了 23 个设计模式，这是设计模式领域里程碑的事件，导致了软件设计模式的突破。这 4 位作者在软件开发领域里也以他们的 “四人组”（Gang of Four，GoF）著称。")]),_._v(" "),e("h2",{attrs:{id:"_2-概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-概念"}},[_._v("#")]),_._v(" 2. 概念")]),_._v(" "),e("p",[_._v("软件设计模式（Software Design Pattern），又称设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。它描述了在软件设计过程中的一些不断重复发生的问题，以及该问题的解决方案。也就是说，它是解决特定问题的一系列套路，是前辈们的代码设计经验的总结，具有一定的普遍性，可以反复使用。")]),_._v(" "),e("h2",{attrs:{id:"_3-学习的必要性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-学习的必要性"}},[_._v("#")]),_._v(" 3. 学习的必要性")]),_._v(" "),e("p",[_._v("设计模式的本质是面向对象设计原则的实际运用，是对类的封装性、继承性和多态性以及类的关联关系和组合关系的充分理解。")]),_._v(" "),e("p",[_._v("正确使用设计模式具有以下优点：")]),_._v(" "),e("ul",[e("li",[_._v("可以提高程序员的思维能力、编程能力和设计能力。")]),_._v(" "),e("li",[_._v("使程序设计更加标准化、代码编制更加工程化，使软件开发效率大大提高，从而缩短软件的开发周期。")]),_._v(" "),e("li",[_._v("使设计的代码可重用性高、可读性强、可靠性高、灵活性好、可维护性强。")])]),_._v(" "),e("h2",{attrs:{id:"_4-设计模式分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-设计模式分类"}},[_._v("#")]),_._v(" 4. 设计模式分类")]),_._v(" "),e("ul",[e("li",[e("p",[e("strong",[_._v("创建型模式")])]),_._v(" "),e("p",[_._v("用于描述“怎样创建对象”，它的主要特点是“将对象的创建与使用分离”。GoF（四人组）书中提供了 "),e("code",[_._v("单例")]),_._v("、"),e("code",[_._v("原型")]),_._v("、"),e("code",[_._v("工厂方法")]),_._v("、"),e("code",[_._v("抽象工厂")]),_._v("、"),e("code",[_._v("建造者")]),_._v(" 等 5 种创建型模式。")])]),_._v(" "),e("li",[e("p",[e("strong",[_._v("结构型模式")])]),_._v(" "),e("p",[_._v("用于描述如何将类或对象按某种布局组成更大的结构，GoF（四人组）书中提供了"),e("code",[_._v("代理")]),_._v("、"),e("code",[_._v("适配器")]),_._v("、"),e("code",[_._v("桥接")]),_._v("、"),e("code",[_._v("装饰")]),_._v("、"),e("code",[_._v("外观")]),_._v("、"),e("code",[_._v("享元")]),_._v("、"),e("code",[_._v("组合")]),_._v(" 等 7 种结构型模式。")])]),_._v(" "),e("li",[e("p",[e("strong",[_._v("行为型模式")])]),_._v(" "),e("p",[_._v("用于描述类或对象之间怎样相互协作共同完成单个对象无法单独完成的任务，以及怎样分配职责。GoF（四人组）书中提供了 "),e("code",[_._v("模板方法")]),_._v("、"),e("code",[_._v("策略")]),_._v("、"),e("code",[_._v("命令")]),_._v("、"),e("code",[_._v("职责链")]),_._v("、"),e("code",[_._v("状态")]),_._v("、"),e("code",[_._v("观察者")]),_._v("、"),e("code",[_._v("中介者")]),_._v("、"),e("code",[_._v("迭代器")]),_._v("、"),e("code",[_._v("访问者")]),_._v("、"),e("code",[_._v("备忘录")]),_._v("、"),e("code",[_._v("解释器")]),_._v(" 等 11 种行为型模式。")])])])])}),[],!1,null,null,null);v.default=o.exports}}]);