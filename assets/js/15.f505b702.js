(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{430:function(t,s,r){t.exports=r.p+"assets/img/1.8727596f.png"},431:function(t,s,r){t.exports=r.p+"assets/img/2.046325f5.png"},432:function(t,s,r){t.exports=r.p+"assets/img/3.920e3fa3.png"},433:function(t,s,r){t.exports=r.p+"assets/img/4.c0371902.png"},434:function(t,s,r){t.exports=r.p+"assets/img/5.1e4b0910.png"},435:function(t,s,r){t.exports=r.p+"assets/img/6.9684c78c.png"},436:function(t,s,r){t.exports=r.p+"assets/img/7.abb07a7b.png"},437:function(t,s,r){t.exports=r.p+"assets/img/8.4c4d5c53.png"},438:function(t,s,r){t.exports=r.p+"assets/img/9.b8e1531e.png"},439:function(t,s,r){t.exports=r.p+"assets/img/10.5d6d2dec.png"},440:function(t,s,r){t.exports=r.p+"assets/img/11.dd9a7170.png"},441:function(t,s,r){t.exports=r.p+"assets/img/12.29975821.png"},949:function(t,s,r){"use strict";r.r(s);var _=r(65),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"docker"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),_("h2",{attrs:{id:"_1-docker是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker是什么"}},[t._v("#")]),t._v(" 1. Docker是什么")]),t._v(" "),_("ul",[_("li",[t._v("Docker 的出现打破了过去 "),_("code",[t._v("程序即应用")]),t._v(" 的观念")]),t._v(" "),_("li",[t._v("通过镜像，将运行应用程序所需要的系统环境（系统核心除外），由下而上打包，达到应用程序跨平台无缝接轨运作")]),t._v(" "),_("li",[t._v("是一种容器虚拟化技术，解决了运行环境和配置问题，方便持续集成并有助于项目的整体发布")])]),t._v(" "),_("h2",{attrs:{id:"_2-容器与虚拟机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-容器与虚拟机"}},[t._v("#")]),t._v(" 2. 容器与虚拟机")]),t._v(" "),_("h3",{attrs:{id:"_2-1-容器发展简史"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-容器发展简史"}},[t._v("#")]),t._v(" 2.1 容器发展简史")]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(430)}}),t._v(" "),_("br"),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(431)}}),t._v(" "),_("h3",{attrs:{id:"_2-2-传统虚拟机技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-传统虚拟机技术"}},[t._v("#")]),t._v(" 2.2 传统虚拟机技术")]),t._v(" "),_("p",[t._v("虚拟机（virtual machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。")]),t._v(" "),_("p",[t._v("它可以在一个操作系统里面运行另一个操作系统，比如在 Windows10 系统里面运行 Linux系统CentOS7。应用程序对此毫无感知，因为虚拟机看上去跟真实系统一模一样，而对于底层系统来说，虚拟机就是一个普通文件，不需要了就删掉，对其他部分毫无影响。这类虚拟机完美的运行了另一套系统，能够使应用程序，操作系统和硬件三者之间的逻辑不变。")]),t._v(" "),_("br"),t._v(" "),_("p",[_("strong",[t._v("虚拟机的缺点")])]),t._v(" "),_("ol",[_("li",[t._v("资源占用多")]),t._v(" "),_("li",[t._v("冗余步骤多")]),t._v(" "),_("li",[t._v("启动慢")])]),t._v(" "),_("h3",{attrs:{id:"_2-3-容器虚拟化技术"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-容器虚拟化技术"}},[t._v("#")]),t._v(" 2.3 容器虚拟化技术")]),t._v(" "),_("p",[t._v("由于前面虚拟机存在某些缺点，Linux发展出了另一种虚拟化技术：")]),t._v(" "),_("p",[_("code",[t._v("Linux容器（Linux Containers，缩写为 LXC）")])]),t._v(" "),_("p",[t._v("Linux容器是与系统其他部分隔离开的一系列进程，从另一个镜像运行，并由该镜像提供支持进程所需的全部文件。Linux容器提供的镜像包含了应用的所有依赖项，因而在从开发到测试再到生产的整个过程中，它都具有可移植性和一致性。")]),t._v(" "),_("p",[t._v("Linux容器不是模拟一个完整的操作系统，而是对进程进行隔离。有了容器，就可以将软件运行所需的所有资源打包到一个隔离的容器中。 容器与虚拟机不同，不需要捆绑一整套操作系统 ，只需要软件工作所需的库资源和设置。系统因此而变得高效轻量并保证部署在任何环境中的软件都能始终如一地运行。")]),t._v(" "),_("h3",{attrs:{id:"_2-4-对比"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-对比"}},[t._v("#")]),t._v(" 2.4 对比")]),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"80%"},attrs:{src:r(432)}}),t._v(" "),_("br"),t._v(" "),_("p",[t._v("比较了 Docker 和 传统虚拟化 方式的不同之处：")]),t._v(" "),_("p",[t._v("传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；")]),t._v(" "),_("p",[t._v("容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核 且也没有进行硬件虚拟 。因此容器要比传统虚拟机更为轻便。 每个容器之间互相隔离，每个容器有自己的文件系统，容器之间进程不会相互影响，能区分计算资源。")]),t._v(" "),_("h2",{attrs:{id:"_3-能干什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-能干什么"}},[t._v("#")]),t._v(" 3. 能干什么")]),t._v(" "),_("h3",{attrs:{id:"_3-1-技术职级变化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-技术职级变化"}},[t._v("#")]),t._v(" 3.1 技术职级变化")]),t._v(" "),_("p",[t._v("coder -> programmer -> software engineer -> DevOps engineer")]),t._v(" "),_("h3",{attrs:{id:"_3-2-开发-运维-devops"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-开发-运维-devops"}},[t._v("#")]),t._v(" 3.2 开发/运维(Devops)")]),t._v(" "),_("ul",[_("li",[t._v("一次构建、随处运行")]),t._v(" "),_("li",[t._v("更快速的应用交付和部署")]),t._v(" "),_("li",[t._v("更便捷的升级和扩缩容")]),t._v(" "),_("li",[t._v("更简单的系统运维")]),t._v(" "),_("li",[t._v("更高效的计算资源利用")])]),t._v(" "),_("h3",{attrs:{id:"_3-3-docker应用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-docker应用场景"}},[t._v("#")]),t._v(" 3.3 Docker应用场景")]),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(433)}}),t._v(" "),_("br"),t._v(" "),_("p",[t._v("Docker 借鉴了标准集装箱的概念。标准集装箱将货物运往世界各地，Docker将这个模型运用到自己的设计中，唯一不同的是：集装箱运输货物，而Docker运输软件。")]),t._v(" "),_("h3",{attrs:{id:"_3-4-哪些企业在使用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-哪些企业在使用"}},[t._v("#")]),t._v(" 3.4 哪些企业在使用")]),t._v(" "),_("ul",[_("li",[t._v("新浪")])]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(434)}}),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(435)}}),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(436)}}),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(437)}}),t._v(" "),_("p",[_("br"),_("br")]),t._v(" "),_("br"),t._v(" "),_("ul",[_("li",[t._v("美团")])]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(438)}}),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(439)}}),t._v(" "),_("br"),t._v(" "),_("br"),t._v(" "),_("br"),t._v(" "),_("ul",[_("li",[t._v("蘑菇街")])]),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(440)}}),t._v(" "),_("br"),t._v(" "),_("img",{staticStyle:{zoom:"50%"},attrs:{src:r(441)}})])}),[],!1,null,null,null);s.default=a.exports}}]);